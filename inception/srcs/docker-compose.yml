version: "3.9"

services:
  mariadb:
    container_name: mariadb
    build:
      context: ./requirement/mariadb
      dockerfile: Dockerfile
      tags: 
        - mariadb:v1
    image: mariadb:v1
    restart: always
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    volumes:
      - db-volume:/var/lib/mysql
    networks:
      - app_network

  wordpress:
    depends_on:
      - mariadb
    container_name: wordpress
    build:
      context: ./requirement/wordpress
      dockerfile: Dockerfile
      tags: 
        - wordpress:v1
    image: wordpress:v1
    restart: always
    environment:
      - WORDPRESS_DB_HOST=${WORDPRESS_DB_HOST}
      - WORDPRESS_DB_NAME=${WORDPRESS_DB_NAME}
      - WORDPRESS_DB_USER=${WORDPRESS_DB_USER}
      - WORDPRESS_DB_PASSWORD=${WORDPRESS_DB_PASSWORD}
      - WORDPRESS_URL=${WORDPRESS_URL}
      - WORDPRESS_ADMIN_USER=${WORDPRESS_ADMIN_USER}
      - WORDPRESS_ADMIN_PASSWORD=${WORDPRESS_ADMIN_PASSWORD}
      - WORDPRESS_ADMIN_EMAIL=${WORDPRESS_ADMIN_EMAIL}
      - WORDPRESS_USER=${WORDPRESS_USER}
      - WORDPRESS_USER_PASSWORD=${WORDPRESS_USER_PASSWORD}
      - WORDPRESS_USER_EMAIL=${WORDPRESS_USER_EMAIL}
    volumes:
      - wp-volume:/var/www/html
    networks:
      - app_network

  nginx:
    depends_on:
      - wordpress
    container_name: nginx
    build:
      context: ./requirement/nginx
      dockerfile: Dockerfile
      tags:
        - nginx:v1
    image: nginx:v1
    restart: always
    volumes:
      - wp-volume:/var/www/html
    ports:
      - "443:443"
    networks:
      - app_network

volumes:
  db-volume:
    driver: local
    driver_opts:
      device: /home/jiyunpar/data/db
      type: none
      o: bind
  wp-volume:
    driver: local
    driver_opts:
      device: /home/jiyunpar/data/wp
      type: none
      o: bind

networks:
  app_network:
